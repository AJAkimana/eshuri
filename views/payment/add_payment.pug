extends ../layout
block append content
    .wrapper.wrapper-full-page.full-page-background(ng-controller="paymentCtrl",style="background-image: url('../imgs/login.jpeg')")
        .full-page.login-page(filter-color="white")
            .content
                .container-fluid
                    .row
                      .col-md-8.col-sm-offset-2
                        .card.card-box
                          .card-head
                            h3.text-center fees type
                          #bar-parent.card-body
                            form.form-horizontal
                              .form-body
                                .col-md-12
                                  .form-group.row
                                     table.table
                                        thead
                                          th.text-center #
                                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b") fee Type
                                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='level';b=!b") Duration
                                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='students';b=!b") Due Amount
                                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='students';b=!b") Term
                                          th Actions
                                        tbody
                                          tr(style='color:#3d4958;', ng-repeat="fee in fees")
                                            td(width="1%" height="1%") {{$index + 1}}
                                            td {{fee.fee_type|toGotType}}
                                            td {{fee.duration|toDuration}}  
                                            td {{fee.due_amount}}
                                            td {{fee.currentTerm}}
                                            td.td-actions.text-center
                                              button.btn.btn-primary(ng-click="editPayment(fee)",data-target='#edit_payment_Modal', data-toggle='modal')
                                                i.material-icons edit
                                              button.btn.btn-danger(ng-click="deleteFees(fee._id)")
                                                i.material-icons close
                                              //- button.btn.btn-info(ng-click="setClassTeacher(classe)",data-target='#set_class_teacher_Modal', data-toggle='modal')
                                              //-   i.material-icons(style='color:#3d4958;') edit
                                              //-   | Set class teacher 
                                     dir-pagination-controls.pull-right(pagination-id='allclasses', max-size='5', direction-links='true', boundary-links='true')
                                     button.btn.btn-success.pull-right(type='button' ng-disabled="disable_field",data-target='#add_payment_Modal', data-toggle='modal') ADD
            #add_payment_Modal.modal.fade(role='dialog')
              .modal-dialog
                .modal-content
                  .modal-header
                    h4.card-title 
                      | Edit class:
                      strong {{fee_type|toGotType}} 

                  .modal-body
                    select.form-control.input-height(ng-model='select_fee',placeholder='Select Fees Type...')
                      option(value='', disabled='', selected='') Select payment type option
                      option(value='1') Term 1 SC_Fees
                      option(value='2') Second Term Tuition
                      option(value='3') Third Term Tuition
                      option(value='4') Year Tuition
                      option(value='5') Student Report
                      option(value='6') Damage Payment
                    select.form-control.input-height(ng-model='select_term')
                      option(value='', disabled='true', selected='') Select duration option 
                      option(value='1') First Term
                      option(value='2') Second Term
                      option(value='3') Third Term
                      option(value='4') Whole Year

    
                    input.form-control(type="number",ng-model="due_amount",placeholder="Amount Due")
                  .modal-footer
                    button.btn.btn-sm.btn-primary(ng-click="createFees(fees)") Confirm
                    button.btn.btn-sm.btn-warning(type='button', data-dismiss='modal') Cancel
            #edit_payment_Modal.modal.fade(role='dialog')
              .modal-dialog
                .modal-content
                  .modal-header
                    h4.card-title 
                      | Edit class:
                      strong {{fee_type|toDuration }}

                  .modal-body
                    //- input.form-control(type="text",ng-model="fee_type|toGotType",placeholder="fees type")
                    //- input.form-control(type="text",ng-model="duration|toDuration",placeholder="duration")
                    input.form-control(type="number",ng-model="due_amount",placeholder="due amount")
                    //- input.form-control(type="text",ng-model="currentTerm",placeholder="term")
                  .modal-footer
                    button.btn.btn-sm.btn-primary(ng-click="updatePayAdd()") Confirm
                    button.btn.btn-sm.btn-warning(type='button', data-dismiss='modal') Cancel
block append scripts
    script(src="../js/MIT/MIT_sweetalert2.js", type="text/javascript")
    script.
        var app = angular.module('eshuri_App', ['ngRoute']);
        app.filter('toGotType', function() {
            return function(input){
              var got_type='';
              switch(input){
                case 1: got_type='First Term Tuition';break;
                case 2:got_type='Second Term Tuition';break;
                case 3:got_type='Third Term Tuition';break;
                case 4:got_type='Year Tuition';break;
                case 5:got_type='Student Report';break;
                case 6:got_type='Damage Payment';break;
                case 7:got_type='Student Registration';break;
                default: break;
                
              }
              return got_type;
            }
          })
          .filter('toDuration',function(){
            return function(input){
              var my_duration='';
              switch(input){
                case 1:my_duration='First Term';break;
                case 2:my_duration='Second Term';break;
                case 3:my_duration='Third Term';break;
                case 4:my_duration='Whole Year';break;
                //- case 5:my_duration='Whole Year';break;
                
                //- case 5:my_duration='Damage Payment';break;
                default: break;
                
              }
              return my_duration;
              }
            
          })
          .controller('paymentCtrl', function($scope, $http, $window){

            $scope.loadSchools = function(){
                $http
                .get("/school.list")
                .then(function(response){
                  $scope.schools=response.data;
                  //- console.log(schools)
                })
                .catch(function(erreur){
                  Notifier.danger(erreur.data)
                }); 

              }
            $scope.getListStudents = function(){
                $http
                .post("/school.students.json",{_csrf:$scope.anti_csrf,school_id:$scope.school })
                .then(function(response){
                    $scope.students = response.data;
                })
                .catch(function(erreur){
                    Notifier.danger(erreur.data);
                });
            }

            $scope.loadSchools();

            $scope.editPayment = function(fee){
              $scope.due_amount=fee.due_amount;
              $scope.fee_id=fee._id;
            }
            
            $scope.thisPayAdd={};
            $scope.updatePayAdd = function(){

              //- $scope.thisPayAdd.fee_type=$scope.fee_type;
              //- $scope.thisPayAdd.duration=$scope.duration;
              $scope.thisPayAdd.due_amount=$scope.due_amount;
              //- $scope.thisPayAdd.currentTerm=$scope.currentTerm;
              $scope.thisPayAdd.fee_id=$scope.fee_id;
              //- $scope.thisPayAdd.name=$scope.name
              $http
                .post('/fee.edit', $scope.thisPayAdd)
                .then(function(response){
                  Notifier.success("The operation is Successfull");
                  //- $scope.thisPayAdd =null;
                  $('#edit_payment_Modal').modal('hide');
                  $scope.getListFees();
                })
                .catch(function(error){
                  Notifier.danger(error.data);
                })
            }
            $scope.deleteFees = function(fee_id){
              swal({
                title: 'Do you want to delete the selected fees type \n<i style="color:red">'+ '' +'</i> \n ?',
                text: " <b>Remember </b>You will not be able to revert this!",
                //- html:'<div class="form-group"><label> Type your password please</label>'+
                //-   '<input id="confirmPass" type="password" class="form-control" />'+
                //- '</div> <span class="category"> This action cannot be reverted !</span>',
                type: 'warning',
                showCancelButton: true,
                confirmButtonClass: 'btn btn-success',
                cancelButtonClass: 'btn btn-danger',
                confirmButtonText: 'Yes, delete it!',
                buttonsStyling: false
              }).then(function(){
                  $http
                .post("/feesAdded.delete",{_csrf:$scope.anti_csrf,fee_id:fee_id})
                .then(function(response){
                  $scope.getListFees();
                  swal({
                    title: 'Deleted!',
                    text: ' and all of its content \n has been successfully deleted.',
                    type: 'success',
                    confirmButtonClass: "btn btn-success",
                    buttonsStyling: false
                  })
                })
                .catch(function(erreur){
                  Notifier.danger(erreur.data);
                });
              }).catch(swal.noop);
            }

            $scope.createFees=()=>{
              
            //- console.log('HHHHHHHHHHHHHHHHHH')
            $scope.newFees._csrf ='#{anti_csrf}';
            $scope.newFees.school_id ='#{school_id}';
            $scope.newFees.currentTerm =$scope.select_term;
            $scope.newFees.due_amount =$scope.due_amount;
            $scope.newFees.duration =$scope.select_term;
            $scope.newFees.fee_type =$scope.select_fee;
            //- $scope.newFees.class_id =$scope.classe_id;
            $http
            .post("/createFees.add",$scope.newFees)
            .then(function(response){
                Notifier.success("Data has been successfully added to the class");
                $scope.getListFees();
                $('#add_payment_Modal').modal('hide');
                //- $scope.c_add =false;
                $scope.newFees=null
              })
            .catch(function(erreur){
              Notifier.danger(erreur.data);
            }); 
             
            }
            $scope.getListFees=()=>{
              $http
              .get("/fees.list/#{school_id}")
              .then(function(response){
                $scope.fees=response.data;
                //- console.log($scope.fees)
              })
              .catch(function(erreur){
                Notifier.danger(erreur.data)
              }); 
            }
            
            
            $scope.verifyURN=(inputUrn)=>{
                var urn = inputUrn.trim().toLowerCase()
                $scope.studentToPayFor=null;
                for (var i=0; i<$scope.students.length; i++){
                    var studentUrn = $scope.students[i].URN.trim().toLowerCase();

                    if(studentUrn==urn) {
                        $scope.studentToPayFor=$scope.students[i];
                        $scope.disable_field=false;
                    }
                }
                if($scope.studentToPayFor===null){
                    Notifier.info("The URN not found Please verify and try again...");
                    $scope.disable_field=true;
                }
            }
            $scope.getListFees();
            $scope.disable_field=false;
            $scope.newFees ={};
            $scope.anti_csrf ="#{csrf_token}";
        })
        