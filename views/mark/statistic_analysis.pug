extends ../layout
block append content 
	.wrapper.wrapper-full-page.full-page-background(style="background-image: url('../imgs/register.jpeg')")
		.full-page.login-page(filter-color="white", ng-controller="statistiCtlr")
			.content
				.container-fluid.app_cont
					.card
						.card-header(data-background-color="red")
							h2.text-center #{school_name} statistical analysis	
						.card-content
							.col-lg-12.col-md-12.col-sm-12.col-xs-12
							.col-md-3.col-sm-6.col-xs-12
								.card
									.card-header
										h4.card-title Statistical basis
									.card-content
										.col-md-12
											h4.info-text Based on
												label.radio-inline
													input(name='based_on', type='radio', ng-model='based_on', value='C', ng-change="basedOn(based_on)")
													| Classe
												label.radio-inline
													input(name='based_on', type='radio', ng-model='based_on', value='S', ng-change="basedOn(based_on)")
													| School
										.panel-group(role='tablist')#accordion
											.panel.panel-default
												.panel-heading(role='tab', id="{{'tab_1'}}", ng-click="setCurrent('class')")
													a(role='button', data-toggle='collapse', data-parent='#accordion', href="#{{'collapse_1'}}", aria-expanded="false", aria-controls="{{'collapse_1'}}")
														h4.panel-title
															| Classes <strong>(16)</strong>
															i.material-icons keyboard_arrow_down
												.panel-collapse.collapse(role='tabpanel', aria-labelledby="{{'tab_1'}}", id="{{'collapse_1'}}")
													.panel-body
															.col-md-12(ng-repeat="cont in contents")
																label.radio-inline
																	input(type="radio",name="selected_cont",ng-model="selected_cont", value="{{cont.name}}", ng-change="selectContent(cont,'class')")
																	| {{cont.name|uppercase|toClasseName}}
											.panel.panel-default
												.panel-heading(role='tab', id="{{'tab_2'}}", ng-click="setCurrent('course')")
													a(role='button', data-toggle='collapse', data-parent='#accordion', href="#{{'collapse_2'}}", aria-expanded="false", aria-controls="{{'collapse_2'}}")
														h4.panel-title
															| Courses <strong>(16)</strong>
															i.material-icons keyboard_arrow_down
												.panel-collapse.collapse(role='tabpanel', aria-labelledby="{{'tab_2'}}", id="{{'collapse_2'}}")
													.panel-body
															.col-md-12(ng-repeat="cont in contents")
																label.radio-inline
																	input(type="radio",name="selected_cont",ng-model="selected_cont", value="{{cont.name}}", ng-change="selectContent(cont,'course')")
																	| {{cont.name}}
										a.btn-simple.btn-rose(href="#", ng-click="studentAggr()"): strong Students
										.row
											.col-md-12
												h4.text-center Select academic
											.col-md-12
												.col-md-6
													.form-group.label-floating
														label.control-label Year
														select.form-control(required="true",ng-model="choosen_year",ng-change="getListTerms()")
															option(value="", disabled selected)
															option(value="{{umwaka}}", ng-repeat="umwaka in academic_years", ng-bind="umwaka|toNormal") 
												.col-md-6
													.form-group.label-floating
														label.control-label Term 
															span(ng-bind="term_name|toTermName")
														select.form-control(required="true",ng-model="choosen_term")
															option(value="", disabled selected)
															option(value="{{term}}", ng-repeat="term in list_terms" ng-bind="(term_name|toTermName)+(term)")
											.col-md-12
												h4.text-center Select type
											.col-md-12
												label.radio-inline
													input(type="radio",ng-model="report_type", value="is_midterm")
													| Mid-Term 
											.col-md-12
												label.radio-inline
													input(type="radio",ng-model="report_type", value="is_term_sum")
													| Term Summary
											.col-md-12
												label.radio-inline
													input(type="radio",ng-model="report_type", value="is_term")
													| End of Term
									.card-footer
										.container
											p
											| &copy; 2016 |
											i.fa.fa-value(aria-hidden='true') &nbsp;
											a(href='#') View Source
							.col-md-6.col-sm-6.col-xs-12
								.card
									.card-header
										h4.card-title.text-center Class
									.card-content
										.table-responsive
											table.table
												thead
													th.text-center #
													th: a.btn-simple.btn-rose Name
													th: a.btn-simple.btn-rose Min
													th: a.btn-simple.btn-rose Max
													th: a.btn-simple.btn-rose Average
													th: a.btn-simple.btn-rose Total
												tbody
													tr
														td(width="1%" height="1%") 1
														td: a(href="#", ng-click="showNext('classe')")
															strong S1A
														td 15
														td 34
														td 27
														td: strong 40
							.col-md-3.col-sm-6.col-xs-12
								.card
									.card-header
										h4.card-title.text-center Marks
									.card-content
										.table-responsive
											table.table
												thead
													th.text-center #
													th: a.btn-simple.btn-rose Name
													th: a.btn-simple.btn-rose Marks
													th: a.btn-simple.btn-rose Total
												tbody
													tr
														td(width="1%" height="1%") 1
														td: a(href="#", ng-click="showNext('classe')")
															strong KALISA Calixte
														td 27
														td: strong 40
											table.table
												thead
													th: a.btn-simple.btn-rose Student name
													th: a.btn-simple.btn-rose Marks/100
												tbody
													tr
														td: strong KALISA Calixte
														td 88
block append scripts
	script(src="../js/select/select.js", type="text/javascript")
	//- script(src="../js/_app.js", type="text/javascript")
	script.
		var app =angular.module('eshuri_App', ['ngRoute']);
		app.filter('toNormal', function() {
			return function(input){
				return Number(input)+Number(2000)
			}
		})
		.filter('toTermName', function() {    
			return function(input){       
				return input=='S'?'Semester':'Term'
			}
		})
		.filter('toClasseName', function() {
			return function(input, term){
				return term=='S'?'Y'+input:'S'+input
			}
		})
		.controller('statistiCtlr', ($scope, $http, $window)=>{
			$scope.sets=[{name:'Classes',type:'class'},{name:'Courses',type:'course'}];
			$scope.courses=[{_id:1,name:'Math'},{_id:2,name:'Computer'}]
			$scope.setCurrent=(type)=>{
				if($scope.criteria['basis']===undefined) return Notifier.danger('Select criteria basis');
				else if($scope.criteria.basis=='S'){
					if($scope.criteria['ay']===undefined||$scope.criteria['term']===undefined){
						return Notifier.danger('Select term and academic year');
					}
					// Load classes with the statistics
				}
				else $scope.contents=type=='class'?$scope.classes:$scope.courses;
				//- console.log('Contents:',$scope.contents)
			}
			$scope.showNext=(next_type)=>{
				if(next_type=='course'){
					//Load course and its aggregations
				}
			}
			$scope.criteria={};
			$scope.basedOn=(basis)=>{
				$scope.criteria.basis=basis;
			}
			$scope.selectContent=(content,type)=>{
				if($scope.criteria['basis']===undefined) return;
				if(type=='class'){
					if(!$scope.choosen_year&&!$scope.choosen_term) return Notifier.danger('Select term and year');
					$scope.loadClassStats(content._id,$scope.choosen_year,$scope.choosen_term);
					//Load classes satistics
				}else if(type=='course'){
					//Load school courses aggregation
				}
			}
			$scope.loadClassStats=(classId,a_year,term)=>{
				$http.post('/statistics.classe',{class_id:classId,academic_year:a_year,term:term})
				.then((response)=>{
					console.log('Okkkkkkkk')
				}).catch((error)=>{
					Notifier.danger(error.data);
				})
			}
			$scope.studentAggr=()=>{
				if($scope.criteria['basis']===undefined) return Notifier.danger('Select criteria basis');
				// Load students aggregations
			}
			$scope.getClassList = ()=>{
				$http
				.get("/classe.list.for.report/#{school_id}")
				.then((response)=>{
					$scope.classes= response.data;
					//console.log("Classes: "+$scope.ClassList)
				})
				.catch((erreur)=>{
					Notifier.danger(erreur.data);
				});        
			};
			$scope.getListTerms = ()=>{
				$http
				.get("/student.get.terms/"+$scope.choosen_year)
				.then((response)=>{
					$scope.list_terms= response.data;
				})
				.catch((erreur)=>{
					Notifier.danger(erreur.data)
				}); 
			}
			$scope.getAcademicYearsList=()=>{
				$http.get("/class.academic_years?school=#{school_id}")
				.then((response)=>{
					$scope.academic_years= response.data;
				})
				.catch((erreur)=>{
					Notifier.danger(erreur.data)
				});        
			}
			$scope.getClassList();
			$scope.getAcademicYearsList();
			$scope.loadClassStats('58c970b9708c4a9f40dfbb85',19,1)
		})	