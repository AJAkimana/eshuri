extends ../layout
block content 
	.main-panel
		include ../partials/header 
		.wrapper.wrapper-full-page.full-page-background(ng-controller="homeLibraryCtrl",style="background-image: url('../imgs/register.jpeg')")
			.full-page.login-page
				.content
					.container-fluid
						.row
							.col-md-6.col-md-offset-3
								.card
									.card-header
										h3.card-title.text-center(ng-hide="viewBook") <strong>WELCOME TO THE LIBRARY</strong>
										h2.card-title.text-center.text-info(ng-show="!finishedloading") <strong>Loading ...</strong>
										h4(ng-show="viewBook")
											center: strong.card-title 
												u {{bookDetails.title|uppercase}}
											center Author: 
												strong {{bookDetails.author}}
											a.label.btn.btn-fill.btn-primary.pull-left(ng-click='viewBook=false' ) Back to Library
										if access < 4
											a.label.btn.btn-fill.btn-success.pull-right(ng-click='addFile=true' ng-hide='addFile || overView || viewBook || EditBookInfo') Add Book
										p.category.text-center(ng-show ="!bookList"): strong No books in this level
								.card(ng-show='addFile')
									.card-content
										.row
											.col-md-12.center
												a.label.btn.btn-fill.btn-danger.pull-right(ng-click='addFile=false') Cancel
												h3.card-title.text-center Add a new <strong> PDF Book </strong>
												form(action="/library.do.upload",method="post",enctype="multipart/form-data")
													.form-group.label-floating
														button.btn.btn-success.btn-round Click to upload your pdf
															i.material-icons attach_file
														input(type="file",required="true",name="pdf_note")
													.form-group.label-floating
														label.control-label Title
														input.form-control(type="text",required="true",name="title",maxlength="140")
													.form-group.label-floating
														label.control-label Author
														input.form-control(type="text",required="true",name="author",maxlength="140")
													.form-group.label-floating
														label.control-label Short description of the book
														textarea.form-control(rows="4",required="true",name="description")
														input.form-control(type="hidden",required="true",name="type",value="0",maxlength="1")
													.form-group.label-floating
														label.control-label Level the book is to be used in (eg 1,2,3..)
														input.form-control(type="number",required="true",name="level",maxlength="1")
													button.btn.btn-fill.btn-rose(type="submit").pull-right Submit
							.col-md-12
								.col-md-10.center(ng-show="viewBook")
									.card
										.card-content
											object(width='100%', height='800', data='{{getPdf}}', type='application/pdf')
											//iframe(width='100%', height='800', src='{{getPdf}}')
								.col-md-5.center(ng-show="overView && !EditBookInfo && !viewBook")
									.card
										.card-content(style="height:70vh")
											.col-md-12
												a.label.btn.btn-fill.btn-primary.pull-left(ng-click='overView=false' ) Back to Library
												if access < 4
													.btn.btn-danger.btn-simple.pull-right(type='button', rel='tooltip', data-placement='bottom', title='Delete', ng-click="deleteBook(theOverView._id, theOverView.title)")
														i.material-icons close
													.btn.btn-success.btn-simple.pull-right(type='button', rel='tooltip', data-placement='bottom',ng-click="editBook(theOverView)" title='Edit')
														i.material-icons edit
												br
											.col-md-4
												img.img(src='{{theOverView.getPhoto}}',alt="{{theOverView.title|uppercase}} ",style="height:20vh")
											.col-md-8
												h4.card-title: strong Title: {{theOverView.title|uppercase}}
												| Author: {{theOverView.author}}
												a.label.btn.btn-fill.btn-success.pull-right(ng-click='readBook(theOverView)' ) Read the book
												br
												br
												h5: strong Description: 
												| {{theOverView.description}}
								.col-md-8.center(ng-show="EditBookInfo")
									.card
										.card-content
											.col-md-12
												a.label.btn.btn-fill.btn-primary.pull-left(ng-click='EditBookInfo=false' ) Back
												br
											.col-md-4
												img.img(src='{{bookToEdit.getPhoto}}',alt="{{bookToEdit.title|uppercase}}",style="height:20vh")
												form(action="/update.book.photo",method="post",enctype="multipart/form-data")
													.form-group.label-floating
														button.btn.btn-success.btn-round Upload photo
															i.material-icons attach_file
															input(type="file",accept="image/*",required="true",name="bookPic")
													.form-group.label-floating
														input.form-control(type="hidden",required="true",value="{{bookToEdit._id}}",name="book_id")
													button.btn.btn-fill.btn-rose(type="submit") Change Photo
											.col-md-8
												.form-group.label-floating
													| Title:
													br
													input.form-control(type="text",required="true",ng-model="bookToEdit.title",name="title",maxlength="140")
												.form-group.label-floating
													| Author:
													br
													input.form-control(type="text",required="true",ng-model="bookToEdit.author",name="author",maxlength="140")
												.form-group.label-floating
													| Description:
													br 
													textarea.form-control(rows="4",required="true",name="description",ng-model="bookToEdit.description")
												.form-group.label-floating
													| Level
													br 
													input.form-control(type="number",required="true",name="level",ng-model="bookToEdit.level",maxlength="1")
												button.btn.btn-fill.btn-rose(ng-click="updateBook()").pull-right Update details				
								.col-md-2.pull-right(ng-show="!overView && !viewBook && !EditBookInfo")
									.card
										.card-content
											.row
												.col-md-12.text-center
													h3.card-title <strong> Levels</strong>
													.btn.btn-danger.btn-simple(ng-click="changeLevel('')") All
													.levels(ng-repeat="onelevel in levelList")
														.btn.btn-danger.btn-simple(ng-click="changeLevel(onelevel)") Level {{onelevel}}
								.col-md-10(ng-show="!overView && !viewBook && !EditBookInfo")
									.col-md-4(ng-repeat="book in bookList")
										.card(style="height:20vh")
											.card-product(id='{{book._id}}')
												a(href="",ng-click="readBook(book)")
													.card-image(data-header-animation='true' style="height:10vh")
														img.img(src='/library.get.photo/{{book._id}}',alt="{{book.title|uppercase}}",)
											.card-content
												.card-actions
													.btn.btn-danger.btn-simple.fix-broken-card(type='button')
													.btn.btn-default.btn-simple(type='button', rel='tooltip', data-placement='bottom', title='overview' ng-click="overViewBook(book)")
														i.material-icons art_track
													if access < 4
														.btn.btn-success.btn-simple(type='button', rel='tooltip', data-placement='bottom', ng-click="editBook(book)",title='Edit')
															i.material-icons edit
														.btn.btn-danger.btn-simple(type='button', rel='tooltip', data-placement='bottom', title='Delete', ng-click="deleteBook(book._id)")
															i.material-icons close
												h4.card-title
												a(style="word-wrap: break-word",href="",ng-click="readBook(book)") {{book.title|uppercase}}
												.price Author: 
													strong(style="word-wrap: break-word") {{book.author|uppercase}}
block append scripts													
	script(src="../js/MIT/MIT_sweetalert2.js", type="text/javascript")
	script(src="../js/MIT/jasny-bootstrap.min.js", type="text/javascript")
	script.
		var app =angular.module('eshuri_App', ['ngRoute']);
		app
		.filter('toTermName', function() {		
			return function(input){				
				return input=='S'?'Semester':'Term'
			}
		})
		.controller('homeLibraryCtrl', function($scope, $http,$window){		
			$scope.changeLevel=function(thelevel){
				$scope.level=thelevel;
				$scope.getBookList();
			}
			$scope.getBookList = function(){
				$http
				.post("/library.book.list",{school_id:$scope.school_id,level:$scope.level})
				.then(function(response){
					$scope.bookList =response.data;
					$scope.bookList.getPhoto= "/library.get.photo/"+$scope.bookList._id
					$scope.finishedloading=true
				})
				.catch(function(erreur){
					Notifier.danger(erreur.data);
				}); 
			}
			$scope.overViewBook = function(bookInfo){
				$scope.theOverView=bookInfo;
				$scope.theOverView.getPhoto= "/library.get.photo/"+$scope.theOverView._id
				$scope.overView=true;

			}
			$scope.readBook = function(bookInfo){
				$scope.bookDetails= bookInfo;
				$scope.getPdf="/library.get.pdf/"+$scope.bookDetails._id
				//- var pdf = new PDFObject({
				//-   	url: "/library.get.pdf/"+$scope.bookDetails._id,
				//-   	id: "pdfRendered",
				//-   	pdfOpenParams: {
				//-   		view: "FitH"
				//-   	}
				//- }).embed("pdfRenderer");
				$scope.overView=false;
				$scope.viewBook=true;
				
			}
			$scope.deleteBook = function(BookId, BookName){
				// \n<i style="color:red">'+BookName+'</i> \n 
				swal({
					title: 'Do you realy want to delete this book?',
					text: "You will not be able to revert this!",
					type: 'warning',
					showCancelButton: true,
					confirmButtonClass: 'btn btn-success',
					cancelButtonClass: 'btn btn-danger',
					confirmButtonText: 'Yes, delete it!',
					buttonsStyling: false
				}).then(function(){
				  	$http
					.delete("/delete.Book/"+BookId)
					.then(function(response){
						$scope.getBookList();
						$scope.overView=false;
						swal({
							title: 'Deleted!',
							text: 'Book has been deleted.',
							type: 'success',
							confirmButtonClass: "btn btn-success",
							buttonsStyling: false
						})
					})
					.catch(function(erreur){
						Notifier.danger(erreur.data);
					});
				});
				//- $http
				//- .delete("/delete.Book/"+BookId)
				//- .then(function(response){
				//- 	Notifier.success("Book successfully deleted")
				//- 	$scope.getBookList();
				//- 	$scope.overView=false;
				//- })
				//- .catch(function(erreur){
				//- 	Notifier.danger(erreur.data)
				//- })
			}
			$scope.editBook = function(book){
				$scope.bookToEdit=book;
				$scope.bookToEdit.getPhoto="/library.get.photo/"+$scope.bookToEdit._id
				$scope.EditBookInfo=true;
			}
			$scope.updateBook = function(){
				$http
				.put("/update.book.details",$scope.bookToEdit)
				.then(function(response){
					Notifier.success("Book successfully updated")
					$scope.bookToEdit=[];
					$scope.EditBookInfo=false;
				})
				.catch(function(erreur){
					Notifier.danger(erreur.data)
				})
			}
			$scope.getLevelList = function(){
				$http
				.get("/library.level.list")
				.then(function(response){
					$scope.levelList=response.data;
				})
				.catch(function(erreur){
					Notifier.danger(erreur.data)
				})
			}
			
			$scope.getLevelList();
			$scope.level ="";
			$scope.anti_csrf ="#{csrf_token}";
			$scope.school_id ="#{school_id}";
			$scope.getBookList();	
		})