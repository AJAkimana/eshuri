extends ../layout
block append scripts
	script(src="../js/MIT/jquery.select-bootstrap.js",type="application/javascript")
block content 
	.main-panel
		include ../partials/header 
		.wrapper.wrapper-full-page.full-page-background(ng-controller="optionCtrl",style="background-image: url('../imgs/register.jpeg')")
			.full-page.login-page
				.content
					.container
						.row
							.col-md-7.center
								.card(ng-show="add_option")
									.card-header.card-header-icon(data-background-color="rose")
										i.material-icons school
									.card-content
										h3 {{fac_name|uppercase}}
										h4.card-title Add a new {{school.partnership|toPartnership}} option named: <strong>{{school.name|uppercase}} </strong>
										form
											.row
												.col-md-6
													.form-group
														input(type="hidden",ng-model="school.institution",value="1")
												.col-md-6
													.form-group.label-floating
														label.control-label Choose partnership
														select.form-control(ng-model="school.partnership")
															option(value="{{$index + 1}}", ng-repeat="partnership in partnerships") {{partnership}}
												.col-md-6
													.form-group.label-floating
														label.control-labelSchool Name
														input.form-control(type="text", ng-model="school.name")
												.col-md-6
													.form-group.label-floating
														label.control-label Choose a district
														select.form-control(ng-model="school.district_name")
															option(value="{{$index + 1}}", ng-repeat="district in districts") {{district}}
												.col-md-6
													.form-group.label-floating
														label.control-label Choose school category
														select.form-control(ng-model="school.category")
															option(value="{{$index + 1}}", ng-repeat="category in categories") {{category}}
												.col-md-6
													.form-group.label-floating
														label.control-label Choose school gender
														select.form-control(ng-model="school.genderness")
															option(value="{{$index + 1}}", ng-repeat="genderness in genderness_list") {{genderness}}
												.col-md-6
													.form-group.label-floating
														label.control-label Choose school part name
														select.form-control(ng-model="school.term_name")
															option(value="S") They use semesters
															option(value="T") They use terms
												.col-md-6
													.form-group.label-floating
														label.control-label How many per year?
														input.form-control(type="number", ng-model="school.term_quantity")
												.col-md-6
													.form-group.label-floating
														label.control-label Percentage for student after retaking successfuly a course
														input.form-control(type="number",max="100" ng-model="school.retake_marks")
												.col-md-12
													.form-group.label-floating
														label.control-label A small description of the school
														textarea.form-control(rows="4" cols="50", ng-model="school.description",maxlength="120")
										button.btn.btn-fill.btn-rose(ng-click="addSchool()") Submit
										button.btn.btn-fill.btn-danger.pull-right(ng-click="add_option=!add_option") Cancel
							.col-md-10.center(ng-show="!add_option")
								.card
									.card-header.card-header-icon(data-background-color="rose")
										i.material-icons school
									.card-content
										h3 List of options in {{department_name| uppercase}}
										a.btn-simple.btn.label.btn-rose.pull-right.card-title(ng-click="add_option= !add_option") Add new option
										h3.category.text-center(ng-show ="!schools.length") No option yet registered
										.table-responsive(ng-show ="schools.length")
											table.table
												thead
													th.text-center #
													th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b") Option
													th: a.btn-simple.btn.label.btn-rose(ng-click="a='admin_mail';b=!b") Admin
													th: a.btn-simple.btn.label.btn-rose(ng-click="a='genderness';b=!b") Genderness
													th: a.btn-simple.btn.label.btn-rose(ng-click="a='category';b=!b") Category
													th Actions
												tbody
													tr(ng-repeat="school in schools |orderBy:a:b")
														td(width="1%" height="1%") {{$index + 1}}
														td: a(href="/dashboard.classe/{{school._id}}") {{school.name|uppercase}}
														td {{school.admin_mail || 'Not defined'}}
														td {{school.genderness|to_Gender}}
														td {{school.category|to_Category}}
														td.td-actions.text-right
															button.btn.btn-danger(type='button',ng-click="deleteSchool(school._id,school.name)")
																i.material-icons close

block append scripts
	script(src="../js/MIT/MIT_sweetalert2.js", type="text/javascript")
	script(src="../js/MIT/jasny-bootstrap.min.js", type="text/javascript")
	script.
		var app =angular.module('eshuri_App', ['ngRoute']);
		app
		.filter('to_Gender', function() {
			return function(input){
				if(isNaN(input)) return input;
				switch(input){
					case 1: input ="Mixted";break;case 2: input ="Boys";break;case 3: input ="Girls";break;
					default: input="Unknown Gender";break;
				}
				return input;
			}
		})
		.filter('toInstitution', function() {
			return function(input){
				if(isNaN(input)) return input;
				switch(input){
					case '1': input ="Option";break;case '2': input ="High school";break;case '3': input ="Primary";break;
					case '4': input ="Infant school";break;
					default: input="Invalid institution";break;
				}
				return input;
			}
		})
		.filter('toPartnership', function() {
			return function(input){
				if(isNaN(input)) return input;
				switch(input){
					case '1': input ="Private";break;case '2': input ="Public";break;case '3': input ="Public-Private";break;
					default: input="Invalid partnership";break;
				}
				return input;
			}
		})
		.filter('to_Category', function() {
			return function(input){
				if(isNaN(input)) return input;
				switch(input){
					case 1: input ="All";break;case 2: input ="Internals only";break;case 3: input ="Externals only";break;
					default: input="Unknown category";break;
				}
				return input;
			}
		})
		.controller('optionCtrl', function($scope, $http,$window){
			$scope.addSchool = function(){
				$scope.school._csrf =$scope.anti_csrf;
				$scope.school.department_id =$scope.department_id;
				$scope.school.institution =1 // always 1 because it is a depart
				$http
				.post("/school.add", $scope.school)
				.then(function(response){
					swal({
						type: 'success',
						html: $scope.school.name.toUpperCase() +' has been successfully added, check if all informations are correct',
						confirmButtonClass: 'btn btn-success',
						buttonsStyling: false
					})
					$scope.school =null;
					$scope.add_option = false;
					$scope.reload();
				})
				.catch(function(erreur){
					Notifier.danger(erreur.data);
				}); 
			}
			$scope.deleteSchool = function(school_id,school_name){
				swal({
						title: 'Do you want to delete \n<i style="color:red">'+school_name.toUpperCase()+'</i> \n and all of its content ?',
						text: "You will not be able to revert this!",
						html:'<div class="form-group"><label> Type your password please</label>'+
							'<input id="confirmPass" type="password" class="form-control" />'+
						'</div> <span class="category"> This action cannot be reverted !</span>',
						type: 'warning',
						showCancelButton: true,
						confirmButtonClass: 'btn btn-success',
						cancelButtonClass: 'btn btn-danger',
						confirmButtonText: 'Yes, delete it!',
						buttonsStyling: false
					}).then(function(){
					  	$http
						.post("/school.delete",{_csrf:$scope.anti_csrf,school_id:school_id,confirmPass:$("#confirmPass").val() })
						.then(function(response){
							$scope.reload();
							swal({
								title: 'Deleted!',
								text: school_name+' and all of its content \n has been successfully deleted.',
								type: 'success',
								confirmButtonClass: "btn btn-success",
								buttonsStyling: false
							})
						})
						.catch(function(erreur){
							Notifier.danger(erreur.data);
						});
					});
			}
			$scope.reload = function(){
				$http
		 		.get("/option.list/"+$scope.department_id)
		 		.then(function(response){
					$scope.schools=response.data;
				})
				.catch(function(erreur){
					Notifier.danger(erreur.data)
				});
			}
			$scope.districts =[
			"Eastern-Bugesera","Eastern-Gatsibo","Eastern-Kayonza","Eastern-Kirehe","Eastern-Ngoma","Eastern-Nyagatare","Eastern-Rwamagana","Kigali-Gasabo","Kigali-Kicukiro","Kigali-Nyarugenge","Northen-Burera","Northen-Gakenke","Northen-Gicumbi","Northen-Musanze","Northen-Rulindo","Northen-Nyabihu","Southern-Gisagara","Southern-Huye","Southern-Kamonyi","Southern-Muhanga","Southern-Nyamagabe","Southern-Nyanza","Southern-Nyaruguru","Southern-Ruhango","Western-Karongi","Western-Ngororero","Western-Nyabihu","Western-Nyamasheke","Western-Rubavu","Western-Rusizi","Western-Rutsiro",];
			$scope.categories =["All","Internals Only","Externals Only"];
			$scope.genderness_list =["Mixed","Boys","Girls"];
			$scope.partnerships =["Private","Public","Public-Private"];
			$scope.institutions =["Department","High school","Primary","Infant school"];
			$scope.add_option=false;
			$scope.department_id = "#{department_id}"
			$scope.department_name = "#{department_name}"
			$scope.anti_csrf = "#{csrf_token}"
			$scope.reload();
		})
