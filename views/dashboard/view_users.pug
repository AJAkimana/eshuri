extends ../layout
block append scripts
  script(src="../js/MIT/jquery.select-bootstrap.js",type="application/javascript")
block append content 
  //- .main-panel
    include ../partials/header 
  .wrapper.wrapper-full-page.full-page-background(ng-controller="schoolCtrl",style="background-image: url('../imgs/register.jpeg')")
    .full-page.login-page
      .content
        .container-fluid
          .row
            .col-md-10.center
              //- .card(ng-show="add_school")
                .card-header.card-header-icon(data-background-color="rose")
                  i.material-icons school
                .card-content
                  h4.card-title Add a new {{school.partnership|toPartnership}} {{school.institution|toInstitution}} named: <strong>{{school.name|uppercase}} </strong>
                  form
                    .row
                      .col-md-6
                        .form-group.label-floating
                          label.control-label Name
                          input.form-control(type="text", ng-model="school.name")
                      .col-md-6
                        .form-group.label-floating
                          label.control-label Choose the institution
                          select.form-control(ng-model="school.institution")
                            option(value="{{$index + 1}}", ng-repeat="institution in institutions") {{institution}} 
                          input(type="hidden",ng-model="school.institution",value="1")
                      .col-md-6
                        .form-group.label-floating
                          label.control-label Choose partnership
                          select.form-control(ng-model="school.partnership")
                            option(value="{{$index + 1}}", ng-repeat="partnership in partnerships") {{partnership}}
                      .col-md-6
                        .form-group.label-floating
                          label.control-label Choose a district
                          select.form-control(ng-model="school.district_name")
                            option(value="{{$index + 1}}", ng-repeat="district in districts") {{district}}
                      .col-md-6
                        .form-group.label-floating
                          label.control-label Choose school category
                          select.form-control(ng-model="school.category")
                            option(value="{{$index + 1}}", ng-repeat="category in categories") {{category}}
                      .col-md-6
                        .form-group.label-floating
                          label.control-label Choose school gender
                          select.form-control(ng-model="school.genderness")
                            option(value="{{$index + 1}}", ng-repeat="genderness in genderness_list") {{genderness}}
                      .col-md-6
                        .form-group.label-floating
                          label.control-label Choose school part name
                          select.form-control(ng-model="school.term_name")
                            option(value="S") They use semesters
                            option(value="T") They use terms
                      .col-md-6
                        .form-group.label-floating
                          label.control-label How many per year?
                          input.form-control(type="number", ng-model="school.term_quantity")
                      .col-md-6
                        .form-group.label-floating
                          label.control-label Percentage for student after retaking successfuly a course
                          input.form-control(type="number",max="100" ng-model="school.retake_marks")
                      .col-md-12
                        .form-group.label-floating
                          label.control-label A small description of the school
                          textarea.form-control(rows="4" cols="50", ng-model="school.description",maxlength="120")
                  button.btn.btn-fill.btn-rose(ng-click="addSchool()") Submit
                  button.btn.btn-fill.btn-danger.pull-right(ng-click="add_school=!add_school") Cancel
            .col-md-12.center
              .card(ng-show="!add_school")
                .card-header.card-header-icon(data-background-color="rose")
                  i.material-icons school
                .card-content
                  h4.card-title List of users
                  h4.card-title.pull-right {{users.length}} users
                  //- a.btn-simple.btn.label.btn-rose.pull-right.card-title(ng-click="add_school= !add_school") Add new user
                  h3.category.text-center(ng-show ="!users.length") No user registered yet
                  .table-responsive(ng-show ="users.length")
                    form.form-inline
                      .form-group.pull-left
                        label Show
                        select.form-control(ng-init="n_pages=10", ng-model="n_pages", value="10")
                          option(value="{{pag}}", ng-repeat="pag in pages") {{pag}}
                        label /page
                      .form-group.pull-right
                        input.form-control(type='text', ng-model='search', placeholder='Search')
                    table.table
                      thead
                        th.text-center #
                        th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b") Names
                        th: a.btn-simple.btn.label.btn-rose(ng-click="a='email';b=!b") E-mail
                        th: a.btn-simple.btn.label.btn-rose(ng-click="a='school_name';b=!b") School
                        th: a.btn-simple.btn.label.btn-rose(ng-click="a='classe_name';b=!b") Class
                        th: a.btn-simple.btn.label.btn-rose(ng-click="a='access_level';b=!b") Access Lv
                        th Actions
                      tbody
                        tr(pagination-id="allusers", dir-paginate="user in users|orderBy:a:b|filter:search|itemsPerPage:n_pages")
                          td(width="1%" height="1%") {{$index + 1}}
                          td: a.text-primary(ng-bind="user.name|uppercase" href="/user/{{user.id}}")
                          td(ng-bind="user.email")
                          td(ng-bind="user.school_name|uppercase")
                          td(ng-bind="user.classe_name|uppercase")
                          td.text-info: strong(ng-bind="user.access_level|toAccess")
                          td.td-actions
                            a.btn-simple.btn.label.btn-primary(ng-click="resetPwd(user)")
                              i.material-icons people_outline
                              | Reset pwd
                    dir-pagination-controls.pull-right(pagination-id='allusers', max-size='5', direction-links='true', boundary-links='true')
block append scripts
  script(src="../js/MIT/MIT_sweetalert2.js", type="text/javascript")
  script(src="../js/MIT/jasny-bootstrap.min.js", type="text/javascript")
  script.
    var app =angular.module('eshuri_App', ['ngRoute', 'angularUtils.directives.dirPagination']);
    app
    .filter('to_Capital', function() {
      return function(input){
        return input.charAt(0).toUpperCase() + input.slice(1);
      }
    })
    .filter('toAccess', function() {
      return function(input){
        if(isNaN(input)) return input;
        //- console.log(" we have "+input)
        switch(input){
          case 1: input ="Super Admin";break;case 1.05: input ="HOD";break;case 1.1: input ="School Admin";break;case 2: input="Admin";case 2.1: input="Admin Teacher"; break;case 3: input="Teacher"; break;case 4: input="Student"; break;case 4.1: input="Guest"; break;case 5: input="Parent"; break;
          default: input="Unknown";break;
        }
        return input;
      }
    })
    .filter('toInstitution', function() {
      return function(input){
        if(isNaN(input)) return input;
        switch(input){
          case '1': input ="Department";break;case '2': input ="High school";break;case '3': input ="Primary";break;
          case '4': input ="Infant school";break;
          default: input="Invalid intitution";break;
        }
        return input;
      }
    })
    .filter('toPartnership', function() {
      return function(input){
        if(isNaN(input)) return input;
        switch(input){
          case '1': input ="Private";break;case '2': input ="Public";break;case '3': input ="Public-Private";break;
          default: input="Invalid partnership";break;
        }
        return input;
      }
    })
    .filter('to_Category', function() {
      return function(input){
        if(isNaN(input)) return input;
        switch(input){
          case 1: input ="All";break;
          case 2: input ="Internals only";break;
          case 3: input ="Externals only";break;
          default: input="Unknown category";break;
        }
        return input;
      }
    })
    .controller('schoolCtrl', function($scope, $http,$window){
      $scope.addSchool = function(){
        $scope.school._csrf =$scope.anti_csrf;
        $http
        .post("/school.add", $scope.school)
        .then(function(response){
          swal({
            type: 'success',
            html: $scope.school.name.toUpperCase() +' has been successfully added, check if all informations are correct',
            confirmButtonClass: 'btn btn-success',
            buttonsStyling: false
          })
          $scope.school =null;
          $scope.add_school = false;
          $scope.reload();
        })
        .catch(function(erreur){
          Notifier.danger(erreur.data);
        }); 
      }
      $scope.view_school = function(id_school){
        $window.location.href ="/school/"+id_school;
      }
      $scope.deleteSchool = function(school_id,school_name){
        swal({
            title: 'Do you want to delete \n<i style="color:red">'+school_name.toUpperCase()+'</i> \n and all of its content ?',
            text: "You will not be able to revert this!",
            html:'<div class="form-group"><label> Type your password please</label>'+
              '<input id="confirmPass" type="password" class="form-control" />'+
            '</div> <span class="category"> This action cannot be reverted !</span>',
            type: 'warning',
            showCancelButton: true,
            confirmButtonClass: 'btn btn-success',
            cancelButtonClass: 'btn btn-danger',
            confirmButtonText: 'Yes, delete it!',
            buttonsStyling: false
          }).then(function(){
              $http
            .post("/school.delete",{_csrf:$scope.anti_csrf,school_id:school_id,confirmPass:$("#confirmPass").val() })
            .then(function(response){
              $scope.reload();
              swal({
                title: 'Deleted!',
                text: school_name+' and all of its content \n has been successfully deleted.',
                type: 'success',
                confirmButtonClass: "btn btn-success",
                buttonsStyling: false
              })
            })
            .catch(function(erreur){
              Notifier.danger(erreur.data);
            });
          });
      }
      $scope.resetPwd = function(user){
        swal({
          title: 'Reset password for '+user.name.toUpperCase(),
          text: "Password will be MyEshuri!",
          html:'<div class="form-group"><label>Enter password</label>'+
            '<input id="admin_pwd" type="password" class="form-control" placeholder="Enter you password to confirm"/>'+
          '</div> <span class="category"> To make sure you are allowed !</span>',
          type: 'warning',
          showCancelButton: true,
          confirmButtonClass: 'btn btn-success',
          cancelButtonClass: 'btn btn-danger',
          confirmButtonText: 'Yes, i am sure!',
          buttonsStyling: false
        }).then(function(){
          var user_data = {_csrf:$scope.anti_csrf,user_id:user.id,password:$("#admin_pwd").val()};
          $http
          .post("/user.reset.pwd", user_data)
          .then(function(response){
            Notifier.success("Password has reset");
            //- $scope.getUsersList();
          })
          .catch(function(erreur){
            Notifier.danger(erreur.data);
          });
        });
      }
      $scope.getUsersList = function(){
        $http
        .get("/user.general.list")
        .then(function(response){
          $scope.users=response.data;
          //- console.log(JSON.stringify($scope.users))
        })
        .catch(function(erreur){
          Notifier.danger(erreur.data)
        }); 
      }
      $scope.add_school=false;
      $scope.anti_csrf = "#{csrf_token}"
      $scope.pages=[3,5,10,15,20,25];
      $scope.getUsersList();
    })

