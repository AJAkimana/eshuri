extends ../layout
block append content
    .wrapper.wrapper-full-page.full-page-background(ng-controller="paymentCtrl",style="background-image: url('../imgs/login.jpeg')")
        .full-page.login-page(filter-color="white")
            .content
                .container-fluid
                    .row
                      .col-md-12.col-xs-12
                        .card.card-box
                          .card-head
                            h3.text-center fees type
                          #bar-parent.card-body
                            form.form-horizontal
                              .form-body
                                .col-md-12
                                  .form-group.row
                                     table.table
                                        thead
                                          th.text-center #
                                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b") Roll No
                                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b")  Student Name 
                                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b")  Amount Paid
                                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b")  Date 
                                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b")  Term 
                                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b")  Pay Type
                                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b")  Payer Name
                                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b")  Academic 
                                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b")  Mail 
                                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b")  Phone
                                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b") Action
                                        tbody
                                          tr(style='color:#3d4958;', ng-repeat="gotFee in collectedFees")
                                            td(width="1%" height="1%") {{$index + 1}}
                                            td {{gotFee.student_URN}}
                                            td {{gotFee.student_name}}
                                            td
                                              b
                                                u(style='color:#1382E2;') {{gotFee.amount}}
                                            td {{gotFee.created_at}}
                                            td {{gotFee.currentTerm}}
                                            td {{gotFee.fee_type|toGotType}}
                                            td {{gotFee.payer_name}}
                                            td {{gotFee.academic_year + 2000}}
                                            td {{gotFee.email}}
                                            td {{gotFee.phone_number}}
                                              //- span.label.label-sm.label-success paid
                                            
                                            td 
                                              //- button.btn.btn-primary(ng-click="editClass(classe)",data-target='#edit_class_Modal', data-toggle='modal')
                                              //-   i.material-icons edit
                                              button.btn.btn-danger(ng-click="deleteRecord(gotFee._id)")
                                                i.material-icons close
                         
            //- #add_payment_Modal.modal.fade(role='dialog')
            //-   .modal-dialog
            //-     .modal-content
            //-       .modal-header
            //-         h4.card-title 
            //-           | Edit class:
            //-           strong {{fee_type|toGotType}} 

            //-       .modal-body
            //-         select.form-control.input-height(ng-model='select_fee',placeholder='Select Fees Type...')
            //-           option(value='', disabled='', selected='') Select payment type option
            //-           option(value='1') First Term Tuition
            //-           option(value='2') Second Term Tuition
            //-           option(value='3') Third Term Tuition
            //-           option(value='4') Year Tuition
            //-           option(value='5') Student Report
            //-           option(value='6') Damage Payment
            //-         select.form-control.input-height(ng-model='select_term')
            //-           option(value='', disabled='true', selected='') Select duration option 
            //-           option(value='1') First Term
            //-           option(value='2') Second Term
            //-           option(value='3') Third Term
            //-           option(value='4') Whole Year

    
            //-         input.form-control(type="number",ng-model="due_amount",placeholder="Amount Due")
            //-       .modal-footer
            //-         button.btn.btn-sm.btn-primary(ng-click="createFees(fees)") Confirm
            //-         button.btn.btn-sm.btn-warning(type='button', data-dismiss='modal') Cancel
            //- #edit_payment_Modal.modal.fade(role='dialog')
            //-   .modal-dialog
            //-     .modal-content
            //-       .modal-header
            //-         h4.card-title 
            //-           | Edit class:
            //-           strong {{fee_type|toDuration }}

            //-       .modal-body
            //-         //- input.form-control(type="text",ng-model="fee_type|toGotType",placeholder="fees type")
            //-         //- input.form-control(type="text",ng-model="duration|toDuration",placeholder="duration")
            //-         input.form-control(type="number",ng-model="due_amount",placeholder="due amount")
            //-         //- input.form-control(type="text",ng-model="currentTerm",placeholder="term")
            //-       .modal-footer
            //-         button.btn.btn-sm.btn-primary(ng-click="updatePayAdd()") Confirm
            //-         button.btn.btn-sm.btn-warning(type='button', data-dismiss='modal') Cancel
block append scripts
  script(src="../js/MIT/MIT_sweetalert2.js", type="text/javascript")
  script.
    var app =angular.module('eshuri_App', ['ngRoute', 'angularUtils.directives.dirPagination']);
    app
    .filter('toTermName', function() {
      return function(input){
        return input=='S'?'Semester':'Term'
      }
    })
    .filter('toClasseName', function() {
      return function(input, term){
        return term=='S'?'Y'+input:'S'+input
      }
    })
    .filter('yearToDate', function() {
      return function(input){
        input =Number(input)+2000;
        return input = input+'/'+Number(Number(input)+1);
      }
    })
    .filter('toGotType', function() {
      return function(input){
        var got_type='';
        switch(input){
          case 1: got_type='First Term';break;
          case 2:got_type='Second Term';break;
          case 3:got_type='Third Term';break;
          case 4:got_type='Whole Year';break;
          case 5:got_type='Damage Payment';break;
          default: break;
          
        }
        return got_type;
      }
    })
    .filter('toTeacher_name', function(){
      return function(input,list_teachers){
        if(input==''||!input) return 'Not defined';
        for(var i =0;i < list_teachers.length;i++){
          if(list_teachers[i]._id == input) return list_teachers[i].name
        }
      }
    })
    .controller('paymentCtrl', function($scope,$http,$window){
      $scope.levels=[1,2,3,4,5,6];
      $scope.slevels=['','a','b','c','d']
      $scope.showOption = function(level){
        if(level<=3) $scope.options=[];
        else $scope.getListCoursesAndPrograms()
      }
      $scope.showClassName = function(){
        var classoption='',sublevel=' ';
        if($scope.newClass.option) classoption=$scope.newClass.option;
        if($scope.newClass.sub_level) sublevel=sublevel+$scope.newClass.sub_level;
        else sublevel=''
        $scope.newClass.name=$scope.newClass.level+' '+classoption+sublevel;
        $scope.show_class_name=true;
      }
      $scope.addClasse = function(){
        $scope.showClassName();
        if(!$scope.newClass) return Notifier.danger('You can\'t save class that has no name');
        $scope.newClass._csrf =$scope.anti_csrf;
        $scope.newClass.school_id =$scope.school_id;
        $http
        .post("/class.add",$scope.newClass)
        .then(function(response){
          Notifier.success('S'+$scope.newClass.name+" has been added to the school");
          $scope.newClass =null;
          $scope.show_class_name=false;
          $scope.getListClasses();
        })
        .catch(function(erreur){
          Notifier.danger(erreur.data);
        }); 
      }
      //-  $scope.deleteRecord = function(gotFee){
      //-   $scope.gotFee_id=gotFee._id;
      //-   //- $scope.fee_id=fee._id;
      //- }
      $scope.deleteRecord = function(gotFee){
        $scope.gotFee_id=gotFee.id=""
              swal({
                title: 'Do you want to delete the selected fees type \n<i style="color:red">'+ '' +'</i> \n ?',
                text: " <b>Remember </b>You will not be able to revert this!",
                //- html:'<div class="form-group"><label> Type your password please</label>'+
                //-   '<input id="confirmPass" type="password" class="form-control" />'+
                //- '</div> <span class="category"> This action cannot be reverted !</span>',
                type: 'warning',
                showCancelButton: true,
                confirmButtonClass: 'btn btn-success',
                cancelButtonClass: 'btn btn-danger',
                confirmButtonText: 'Yes, delete it!',
                buttonsStyling: false
              }).then(function(){
                  $http
                .post("/feesAdded.delete",{_csrf:$scope.anti_csrf,fee_id:fee_id})
                .then(function(response){
                  $scope.getListFees();
                  swal({
                    title: 'Deleted!',
                    text: ' and all of its content \n has been successfully deleted.',
                    type: 'success',
                    confirmButtonClass: "btn btn-success",
                    buttonsStyling: false
                  })
                })
                .catch(function(erreur){
                  Notifier.danger(erreur.data);
                });
              }).catch(swal.noop);
            }
      $scope.editClass = function(classe){
        $scope.name=classe.name;
        $scope.level=classe.level;
        $scope.option=classe.option;
        $scope.sub_level=classe.sub_level;
        $scope.currentTerm=classe.currentTerm;
        $scope.classe_id=classe._id;
      }
      $scope.thisClasse={};
      $scope.updateClass = function(){
        var classoption='',sublevel=' ';
        if($scope.option) classoption=$scope.option;
        if($scope.sub_level) sublevel=sublevel+$scope.sub_level;
        else sublevel=''
        $scope.name=$scope.level+' '+classoption+sublevel;
        $scope.thisClasse.level=$scope.level;
        $scope.thisClasse.option=$scope.option;
        $scope.thisClasse.sub_level=$scope.sub_level;
        $scope.thisClasse.classe_id=$scope.classe_id;
        $scope.thisClasse.classe_id=$scope.school_id;
        $scope.thisClasse.name=$scope.name
        $http
          .post('/classe.edit', $scope.thisClasse)
          .then(function(response){
            Notifier.success('S'+$scope.thisClasse.name+" has been modified");
            //- $scope.thisClasse =null;
            $('#edit_class_Modal').modal('hide');
            $scope.getListClasses();
          })
          .catch(function(error){
            Notifier.danger(error.data);
          })
      }
      $scope.setClassTeacher=function(selectedClass){
        $scope.class_name=selectedClass.name.toUpperCase();
        $scope.this_class=selectedClass._id;
      }
      $scope.setTeacher=function(classe, teacher){
        $http.post('/set.class.teacher',{_csrf:$scope.anti_csrf,class_id:classe, teacher_id:teacher,school_id:$scope.school_id})
          .then(function(response){
            $scope.getListClasses();
            $scope.teacher_choosen=null;
            $('#set_class_teacher_Modal').modal('hide');
            Notifier.success("Successfully set");
          })
          .catch(function(erreur){
            Notifier.danger(erreur.data);
          });
      }
      $scope.getListClasses = function(){
        $http
        .get("/classe.list/"+$scope.school_id)
        .then(function(response){
          $scope.classes = response.data;
        })
        .catch(function(erreur){
          Notifier.danger(erreur.data);
        });
      }
      $scope.getCollectedFees=()=>{
        $http
        .get('findCollectedFeesList/'+$scope.school_id)
        .then(function(response){
          $scope.collectedFees=response.data;
          console.log($scope.collectedFees);
        })
        .catch(function(erreur){
          Notifier.danger(erreur.data);
        });
      }
      $scope.deleteClass = function(classe_id,classe_name){
        swal({
            title: 'Do you want to delete \n<i style="color:red">'+classe_name.toUpperCase()+'</i> \n ?',
            text: "You will not be able to revert this!",
            html:'<div class="form-group"><label> Type your password please</label>'+
              '<input id="confirmPass" type="password" class="form-control" />'+
            '</div> <span class="category"> This action cannot be reverted !</span>',
            type: 'warning',
            showCancelButton: true,
            confirmButtonClass: 'btn btn-success',
            cancelButtonClass: 'btn btn-danger',
            confirmButtonText: 'Yes, delete it!',
            buttonsStyling: false
          }).then(function(){
              $http
            .post("/classe.delete",{_csrf:$scope.anti_csrf,classe_id:classe_id,confirmPass:$("#confirmPass").val(),school_id:$scope.school_id,
             })
            .then(function(response){
              $scope.getListClasses();
              swal({
                title: 'Deleted!',
                text: classe_name+' has been deleted.',
                type: 'success',
                confirmButtonClass: "btn btn-success",
                buttonsStyling: false
              })
            })
            .catch(function(erreur){
              Notifier.danger(erreur.data);
            });
          });
      }
      $scope.load_SchoolContent = function(){
        $http
        .get("/school.content.list/"+$scope.school_id)
        .then(function(response){
          $scope.lists = response.data[0].list;
          
          $scope.term_name =response.data[1].infos.term_name;
          $scope.term_quantity=response.data[1].infos.term_quantity; /// here not used 
          $scope.school_name=response.data[1].infos.name;
          //- console.log('Lists:'+JSON.stringify(response.data[1].infos))
          $scope.teachers =response.data.teachers;
          $scope.admins =response.data.admins;
          $scope.unConfirmed =response.data.unConfirmed;
          $scope.courses =response.data.school_courses;
          $scope.programs =response.data.school_programs;
        })
        .catch(function(erreur){
          Notifier.danger(erreur.data);
        }); 
      }
    
      $scope.getListCoursesAndPrograms = function(){
        $http
        .get("/school.courseAndProgram.list/#{school_id}")
        .then(function(response){
          //- $scope.courses = response.data.courses;
          $scope.options = response.data.programs;
        })
        .catch(function(erreur){
          Notifier.danger(erreur.data);
        });
      }

      $scope.loadTeachers = function(){
        $http
        .get("/school.teachers.list/"+$scope.school_id)
        .then(function(response){
          $scope.allteachers = response.data;
        })
        .catch(function(erreur){
          Notifier.danger(erreur.data);
        });
      }
      $scope.show_class_name=false;
      $scope.getListCoursesAndPrograms();
      $scope.pages=[3,5,10,15,20,25];
      $scope.anti_csrf ="#{csrf_token}";
      $scope.school_id ="#{school_id}";
      $scope.department_id ="#{department_id}";
      $scope.term_quantity ="#{term_quantity}";
      $scope.term_name ="#{term_name}";
      if($scope.department_id) $scope.loadSchoolList();
      $scope.load_SchoolContent();
      $scope.loadTeachers();
      $scope.getListClasses();
      $scope.getCollectedFees();
    })
