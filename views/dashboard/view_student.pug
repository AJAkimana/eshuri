extends ../layout
block append scripts
  script(src="../js/MIT/jquery.select-bootstrap.js",type="application/javascript")
block append content 
  //.main-panel
    include ../partials/header 
  .wrapper.wrapper-full-page.full-page-background(ng-controller="studentCtrl",style="background-image: url('../imgs/register.jpeg')")
    .full-page.login-page
      .content
        .container-fluid
          .card
            .row
              .col-xs-12.col-sm-12.col-md-3.col-lg-3
                .card
                  .card-header.card-header-icon(data-background-color="rose")
                    i.material-icons school
                  .card-content
                    h2.card-title 
                      | Classes
                    h3.category.text-center(ng-show ="!classes.length") No classes
                    .table-responsive(ng-show ="classes.length")
                      form.form-inline
                        .form-group.pull-right
                          input.form-control(type='text', ng-model='classe_search', placeholder='Search')
                      table.table
                        thead
                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b") Name
                        tbody
                          tr(pagination-id="allclasses", dir-paginate="classe in classes|orderBy:name|filter:classe_search|itemsPerPage:5")
                            td: a(href="/dashboard.students/{{classe._id}}") {{classe.name|uppercase|toClasseName:term_name}}
                      dir-pagination-controls.pull-right(pagination-id='allclasses', max-size='5', direction-links='true', boundary-links='true')
              .col-xs-12.col-sm-12.col-md-9.col-lg-9
                .card
                  .card-header.card-header-icon(data-background-color="rose")
                    i.material-icons school
                  .card-content
                    h2.card-title 
                      | List of students in 
                      strong {{classe_name|uppercase|toClasseName:term_name}} 
                    h3.category.text-center(ng-show ="!students.length") No student registered yet
                    .table-responsive(ng-show ="students.length")
                      form.form-inline
                        .form-group.pull-left
                          strong Show
                          select.form-control(ng-init="n_pages=10", ng-model="n_pages", value="10")
                            option(value="{{pag}}", ng-repeat="pag in pages") {{pag}}
                          strong entries
                        .form-group.pull-right
                          input.form-control(type='text', ng-model='search', placeholder='Search')
                      table.table
                        thead
                          th.text-center #
                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='name';b=!b") Name
                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='URN';b=!b") URN
                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='hasPaid';b=!b") Can pass tests
                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='isEnabled';b=!b") Access to system
                          th: a.btn-simple.btn.label.btn-rose(ng-click="a='email';b=!b") Email
                          th: a.btn-simple.btn.label.btn-rose Previous class
                          th Actions
                        tbody
                          tr(pagination-id="allstudents", dir-paginate="student in students|orderBy:a:b|filter:search|itemsPerPage:n_pages")
                            td(width="1%" height="1%") {{$index + 1}}
                            td: a(href="#") {{student.name|uppercase}}
                            td {{student.URN|uppercase}}
                            td.text-center: a.btn-simple.btn.label.btn-rose(ng-click="enablePaid(student,student.hasPaid)") {{student.hasPaid|toPaid}}
                            td: a.btn-simple.btn.label(ng-click='activateUser(student)',ng-class="student.isEnabled?'btn-success':'btn-danger'") {{student.isEnabled|toURL}}
                            td {{student.email}}
                            td
                              h5(ng-if="student.prev_classes.length==0") No class
                              ul(ng-if="student.prev_classes.length!=0")
                                li(type="1" ng-repeat="classe in student.prev_classes"): a.btn-simple.btn.label.btn-rose(ng-click="revertStudent(classe, student.name, student._id)") {{classe|toPreClasseName:classes|toClasseName:term_name|uppercase}}
                            td.td-actions.text-right
                              select(ng-model="new_class",ng-change="changeClass(student, new_class)")
                                option(value="{{classe._id}}" ng-repeat="classe in nextClasses") {{classe.name|uppercase|toClasseName:term_name}}
                                option(value="fin") Finalist
                              button.btn.btn-danger(type='button',ng-click="deleteStudent(student._id,student.name)")
                                i.material-icons close
                              button.btn.btn-warning(type='button',ng-click="editStudent(student._id,student.name)")
                                i.material-icons edit
                      dir-pagination-controls.pull-right(pagination-id='allstudents', max-size='5', direction-links='true', boundary-links='true')
block append scripts
  script(src="../js/MIT/MIT_sweetalert2.js", type="text/javascript")
  script(src="../js/MIT/jasny-bootstrap.min.js", type="text/javascript")
  script.
    var app =angular.module('eshuri_App', ['ngRoute', 'angularUtils.directives.dirPagination']);
    app
    .filter('toPaid', function(){
      return (input)=>{
        return input ? "YES":"NO";
      }     
    })
    .filter('toClasseName', function() {
      return function(input, term){
        return term=='S'?'Y'+input:'S'+input
      }
    })
    .filter('toPreClasseName', function(){
      return function(input,list_classes){
        //- if(input==''||!input) return 'No class';
        for(var i =0;i < list_classes.length;i++){
          if(list_classes[i]._id == input) return list_classes[i].name
        }
      }
    })
    .filter('toURL', function() {
      return function(input){
        return input?'Enabled':'Disabled'
      }
    })
    .controller('studentCtrl', function($scope, $http,$window){
      $scope.view_student = function(id_student){
        $window.location.href ="/student/"+id_student;
      }
      $scope.revertStudent = function(classe, name, id){
        console.log('nexts:'+classe+' name: '+name)
        var body={class_id:$scope.class_id,student_id:id,new_class:classe, level:$scope.level}
        var classeName='';
        for(var i=0;i<$scope.classes.length;i++){
          if($scope.classes[i]._id==classe){
            if($scope.term_name=="T") classeName='S'+$scope.classes[i].name.toUpperCase();
            else classeName='Y'+$scope.classes[i].name.toUpperCase();
          } 
        }
        swal({
          title: 'Revert Change classe action',
          text: "Are sure you want to revert <i style='color:green'>"+name.toUpperCase()+"</i> to <i style='color:red'>"+classeName+"</i>?",
          type: 'warning',
          showCancelButton: true,
          confirmButtonClass: 'btn btn-success',
          cancelButtonClass: 'btn btn-warning',
          confirmButtonText: 'Yes I am sure!',
          buttonsStyling: false
        }).then(function(){
          $http
          .post('/school.change.to.previous',body)
          .then(function(response){
            $scope.getstudentList();
            Notifier.success("Classe of "+name.toUpperCase()+" has successfully reverted");
          })
          .catch(function(error){
            Notifier.danger(error.data)
          })
        })
      }
      $scope.editStudent = function(sid, sname){
        var newName='';
        swal({
            title: 'Edit student: <i style="color:green">'+sname.toUpperCase()+'</i>  ?',
            text: "You will not be able to revert this!",
            html:'<div class="form-group">'+
              '<input id="newname" type="text" class="form-control" value="'+sname+'"/>'+
            '</div> ',
            type: 'warning',
            showCancelButton: true,
            confirmButtonClass: 'btn btn-success',
            cancelButtonClass: 'btn btn-warning',
            confirmButtonText: 'Edit!',
            buttonsStyling: false
          }).then(function(){
            newName=$("#newname").val();
              $http
            .post("/school.student.edit",{_csrf:$scope.anti_csrf,student_id:sid,new_name:newName})
            .then(function(response){
              $scope.reload();
              swal({
                title: 'Edited success!',
                text: sname.toUpperCase()+' has edited to '+newName.toUpperCase()+'.',
                type: 'success',
                confirmButtonClass: "btn btn-success",
                buttonsStyling: false
              })
            })
            .catch(function(erreur){
              Notifier.danger(erreur.data);
            });
          });
      }
      $scope.deleteStudent = function(student_id,student_name){
        swal({
            title: 'Do you want to delete the student \n<i style="color:red">'+student_name.toUpperCase()+'</i> \n ?',
            text: "You will not be able to revert this!",
            html:'<div class="form-group"><label> Type your password please</label>'+
              '<input id="confirmPass" type="password" class="form-control" />'+
            '</div> <span class="category"> This action cannot be reverted !</span>',
            type: 'warning',
            showCancelButton: true,
            confirmButtonClass: 'btn btn-success',
            cancelButtonClass: 'btn btn-danger',
            confirmButtonText: 'Yes, delete it!',
            buttonsStyling: false
          }).then(function(){
              $http
            .post("/school.student.delete",{_csrf:$scope.anti_csrf,student_id:student_id,confirmPass:$("#confirmPass").val() })
            .then(function(response){
              $scope.reload();
              swal({
                title: 'Deleted!',
                text: student_name+' and all of its content \n has been successfully deleted.',
                type: 'success',
                confirmButtonClass: "btn btn-success",
                buttonsStyling: false
              })
            })
            .catch(function(erreur){
              Notifier.danger(erreur.data);
            });
          });
      }
      $scope.enablePaid = (student,hasPaid)=>{
        $http
        .post("/student.set_paid",{_csrf:$scope.csrf_token,student_id:student._id,
          hasPaid:!hasPaid
        })
        .then(function(response){
          student.hasPaid =response.data;
        })
        .catch(function(erreur){
          Notifier.danger(erreur.data)
        }); 
      }
      $scope.getstudentList = function(){
        $http
        .post("/school.students.list",{_csrf:$scope.csrf_token,class_id:$scope.class_id})
        .then(function(response){
          $scope.students=response.data;
        })
        .catch(function(erreur){
          Notifier.danger(erreur.data)
        }); 
      }
      $scope.reload = function(){
        $scope.getstudentList();
        $scope.getNextClasses();
        $scope.getListClasses();
      }
      $scope.getNextClasses = function(){
        $http
        .get('/classe.get.nexts/'+$scope.class_id)
        .then(function(response){
          $scope.nextClasses = response.data;
          //console.log('nexts classes:'+JSON.stringify(response.data));
        })
        .catch(function(error){
          Notifier.danger(error.data);
        })
      }
      $scope.changeClass = function(user, classe){
        $scope.person = {student_id:user._id, level:'#{level}', class_id:$scope.class_id,new_class:classe, academic_year:'#{academic_year}'};
        $http
        .post('/school.change.to.next',$scope.person)
        .then(function(response){
          $scope.getstudentList();
          Notifier.success("Classe of "+user.name.toUpperCase()+" has successfully changed");
        })
        .catch(function(error){
          Notifier.danger(error.data);
        })
      }
      $scope.getListClasses = function(){
        $http
        .get("/classe.list/"+$scope.school_id)
        .then(function(response){
          $scope.classes = response.data;
        })
        .catch(function(erreur){
          Notifier.danger(erreur.data);
        });
      }
      $scope.activateUser = function(user){
        $http
        .get("/user.enable/"+user._id)
        .then(function(response){
          user.isEnabled =!user.isEnabled;
        })
        .catch(function(erreur){
          Notifier.danger(erreur.data)
        }); 
      }
      //- $scope.student = {};
      $scope.pages=[3,5,10,15,20,25];
      $scope.add_student=false;
      $scope.term_name = "#{term_name}";
      $scope.classe_name = "#{classe_name}";
      $scope.level = "#{level}";
      $scope.class_id ="#{class_id}";
      $scope.school_id = "#{school_id}"
      $scope.anti_csrf = "#{csrf_token}";
      $scope.reload();
    })