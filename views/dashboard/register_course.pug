extends ../layout
block append scripts
	script(src="../js/MIT/jquery.select-bootstrap.js",type="application/javascript")
block append content
	//- .main-panel
		include ../partials/header 
	.wrapper.wrapper-full-page.full-page-background(ng-controller="course_registerCtrl",style="background-image: url('../imgs/register.jpeg')")
		.full-page.login-page
			.content
				.container-fluid
					.row
						.col-sm-5.col-md-5.col-lg-5
							.card
								.card-header.card-header-icon(data-background-color="rose")
									i.material-icons class
								.card-content
									.row
										.col-md-4.col-md-4.col-md-4
											.form-group.label-floating
												label.control-label Enter a new course
												input.form-control(type="text",autocomplete="off",ng-model="newCourse.name")
										.col.-md-2.col.-md-2.col.-md-2
											button.btn.btn-fill.btn-rose(ng-click="addCourse()") Add
										hr
										.col-md-12.col-md-12.col-md-12
											h3.text-center List of all courses at at <strong>{{school_name|uppercase}}</strong> 
											p.category These courses will be used in assigning them to classes and teachers
											.table-responsive(ng-show="courses.length")
												form.form-inline
													.form-group.pull-left
														label Show
														select.form-control(ng-init="n_pages=10", ng-model="n_pages", value="10")
															option(value="{{pag}}", ng-repeat="pag in pages") {{pag}}
														label /page
													.form-group.pull-right
														input.form-control(type='text', ng-model='search', placeholder='Search')
												table.table
													thead
														th.text-center #
														th: a.btn-simple.btn.label.btn-rose(ng-click="a='content_name';b=!b") Course name
														th: a.btn-simple.btn.label.btn-rose(
														ng-click="a='academic_year';b=!b") Academic year
														th: a.btn-simple.btn.label.btn-rose.text-right Delete
													tbody
														tr(pagination-id="allcourses", dir-paginate="course in courses |orderBy:a:b|filter:search|itemsPerPage:n_pages")
															td(width="1%" height="1%") {{$index + 1}}
															td: a(href="/dashboard.course/{{course._id}}")
																strong {{course.name | uppercase}}
															td {{17|yearToDate}}
															td.td-actions.center
																button.btn.btn-danger(type='button',ng-click="deleteCourse(course._id, course.name)")
																	i.material-icons close
												dir-pagination-controls.pull-right(pagination-id='allcourses', max-size='5', direction-links='true', boundary-links='true')
											p.category.text-center(ng-show ="!courses.length") No class provided here
						.col-sm-7.col-md-7.col-lg-7
							.card
								.card-header.card-header-icon(data-background-color="rose")
									i.material-icons class
								.card-content
									.row
										.col-md-4.col-md-4.col-md-4
											.form-group.label-floating
												label.control-label Enter a new program
												input.form-control(type="text",autocomplete="off",ng-model="newProgram.name")
										.col.-md-2.col.-md-2.col.-md-2
											button.btn.btn-fill.btn-rose(ng-click="addProgram()") Add
										hr
										.col-md-12.col-md-12.col-md-12
											h3.text-center List of all programs at at <strong>{{school_name|uppercase}}</strong> 
											p.category These programs will be used in assigning them to classes and teachers
											.table-responsive(ng-show="programs.length")
												form.form-inline
													.form-group.pull-left
														label Show
														select.form-control(ng-init="pro_n_pages=10", ng-model="pro_n_pages", value="10")
															option(value="{{pag}}", ng-repeat="pag in pages") {{pag}}
														label /page
													.form-group.pull-right
														input.form-control(type='text', ng-model='pro_search', placeholder='Search')
												table.table
													thead
														th.text-center #
														th: a.btn-simple.btn.label.btn-rose(ng-click="a='content_name';b=!b") Abbrevition
														th: a.btn-simple.btn.label.btn-rose(
														ng-click="a='academic_year';b=!b") Program name
														th: a.btn-simple.btn.label.btn-rose.text-right Delete
													tbody
														tr(pagination-id="allprograms", dir-paginate="program in programs |orderBy:a:b|filter:pro_search|itemsPerPage:pro_n_pages")
															td(width="1%" height="1%") {{$index + 1}}
															td: a(href="/dashboard.program/{{program._id}}")
																strong {{progam.name | uppercase}}
															td {{17|yearToDate}}
															td.td-actions.center
																button.btn.btn-danger(type='button',ng-click="deleteProgram(program._id, program.name)")
																	i.material-icons close
												dir-pagination-controls.pull-right(pagination-id='allprograms', max-size='5', direction-links='true', boundary-links='true')
											p.category.text-center(ng-show ="!courses.length") No class provided here
block append scripts
	script(src="../js/MIT/MIT_sweetalert2.js", type="text/javascript")
	script.
		var app =angular.module('eshuri_App', ['ngRoute', 'angularUtils.directives.dirPagination']);
		app
		.filter('toTermName', function() {
			return function(input){
				return input=='S'?'Semester':'Term'
			}
		})
		.filter('yearToDate', function() {
			return function(input){
				input =Number(input)+2000;
				return input = input+'/'+Number(Number(input)+1);
			}
		})
		.controller('course_registerCtrl', function($scope,$http,$window){
			$scope.addCourse = function(){
				if(!$scope.newCourse)
					return Notifier.danger('You can\'t save course that has no name');
				$scope.newCourse.school_id = $scope.school_id;
				//console.log('my school id is:'+$scope.school_id+' and I am me')
				$http
				.post("/school.add.course", $scope.newCourse)
				.then(function(response){
					Notifier.success(angular.uppercase($scope.newCourse.name)+" has been added to the school courses");
					$scope.newCourse =null;
					$scope.getListCourses();
				})
				.catch(function(erreur){
					Notifier.danger(erreur.data);
				});
			}
			$scope.getListCoursesAndPrograms = function(){
				$http
				.get("/school.courseAndProgram.list/"+$scope.school_id)
				.then(function(response){
					$scope.courses = response.data.courses;
					$scope.programs = response.data.programs;
					console.log($scope.school_name+' all school data '+$scope.courses+' '+$scope.programs)
				})
				.catch(function(erreur){
					Notifier.danger(erreur.data);
				});
			}
			$scope.deleteCourse = function(id, name){
				swal({
						title: 'Do you realy want to delete <span class="text-danger">'+angular.uppercase(name)+'</span>? <br> Won\'t be listed on courses list',
						//text: "This will impact marks!",
						type: 'warning',
						showCancelButton: true,
						confirmButtonClass: 'btn btn-success',
						cancelButtonClass: 'btn btn-danger',
						confirmButtonText: 'Yes, I am sure!',
						buttonsStyling: false
					}).then(function(){
					  	$http
						.post("/delete.school.course", {course_id:id})
						.then(function(response){
							$scope.getListCourses();
							Notifier.success(angular.uppercase(name)+" has been deleted");
						})
						.catch(function(erreur){
							Notifier.danger(erreur.data);
						});
					});
			}
			$scope.pages=[3,5,10,15,20,25];
			$scope.school_name ="#{school_name}";
			$scope.school_id ="#{school_id}";
			$scope.anti_csrf ="#{csrf_token}";
			$scope.getListCoursesAndPrograms();
			//- $scope.getListPrograms();
		});