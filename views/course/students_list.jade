extends ../layout
block content 
	.main-panel
		include ../partials/header 
		.wrapper.wrapper-full-page.full-page-background(ng-controller="studentCourseCtrl",style="background-image: url('../imgs/register.jpeg')")
			.full-page.login-page
				.content
					.container-fluid
						.row
							.col-md-4.center
								.card
									.card-content
										a.btn-simple.btn.label.btn-rose(href="/courses/#{course_id}") Go back
										h6.category.text-center {{'#{course_name}'|uppercase}}
							.col-md-12
								h1 
							.col-md-6
								.card
									.card-content
										h3.card-title <strong>{{studentsInClass.length}} students</strong> following the course
										.table-responsive(ng-show="studentsInClass.length>0")
											table.table
												thead
													th.text-center #
													th URN
													th Name
												tbody
													tr(ng-repeat="student in studentsInClass")
														td(width="1%" height="1%") {{$index + 1}}
														td: a(href="#") {{student.URN|uppercase}}	
														td: a(href="#") {{student.name|uppercase}}	
										p.category(ng-show="!studentsInClass.length") No students following the course	
							.col-md-6
								.card
									.card-content
										a.btn-simple.btn.label.btn-rose.pull-right(ng-click="add_retake=!add_retake") Add a student here
										.col-md-12(ng-show="add_retake")
											.col-md-7										
												.form-group.label-floating
													label.control-label Enter the URN of the student to add
													input.form-control(type="text",autocomplete="off",ng-model="retaking_URN")
											.col.-md-2
													button.btn.btn-fill.btn-rose(ng-click="setURN_retaking()") Add
										h3.card-title <strong>{{studentsInRetake.length}} students</strong> retaking the course
										.table-responsive(ng-show="studentsInRetake.length>0")
											table.table
												thead
													th.text-center #
													th URN
													th Name
												tbody
													tr(ng-repeat="student in studentsInRetake")
														td(width="1%" height="1%") {{$index + 1}}
														td: a(href="#") {{student.URN|uppercase}}
														td: a(href="#") {{student.name|uppercase}}
														td.td-actions.text-right
															button.btn.btn-danger(type='button',ng-click="deleteRetake(student._id,student.name)")
																i.material-icons close
										p.category(ng-show="!studentsInRetake.length") No students retaking the course	

block append scripts													
	script(src="../js/MIT/MIT_sweetalert2.js", type="text/javascript")
	script(src="../js/MIT/jasny-bootstrap.min.js", type="text/javascript")
	script(src="../js/MIT/MIT_moment.min.js", type="text/javascript")
	script.
		var app =angular.module('eshuri_App', ['ngRoute']);
		app
		.filter('toTermName', function() {		
			return function(input){				
				return input=='S'?'Semester':'Term'
			}
		})
		.filter('toPublish', function() {		
			return function(input){				
				return input? "Published":"Unpublished"
			}
		})
		.filter('toCAT', function() {		
			return function(input){				
				return input? "is Test":"is Exam"
			}
		})
		.controller('studentCourseCtrl', function($scope, $http,$window){
			$scope.loadstudents = function(){
				$scope.add_retake =false;
				$scope.retaking_URN =""
				$http
				.get("/student.list/"+$scope.course_id)
				.then(function(response){
					$scope.studentsInClass=response.data.class;
					$scope.studentsInRetake=response.data.retaking;

				})
				.catch(function(erreur){
					Notifier.danger(erreur.data)
				});				 
			}
			$scope.setURN_retaking= ()=>{
				$http
				.post("/student.set.retake",{_csrf:$scope.anti_csrf,
				course_id :$scope.course_id,URN:$scope.retaking_URN})
				.then(function(response){
					$scope.loadstudents();
					Notifier.success("Student has been added");
				})
				.catch(function(erreur){
					Notifier.danger(erreur.data)
				});	
			}
			$scope.deleteRetake =function(id_student,name_student){
				swal({
						title: 'Do you want to delete the student '+name_student.toUpperCase()+' from those who are retaking the course ?',
						text: "He will no longer follow the course!",
						type: 'warning',
						showCancelButton: true,
						confirmButtonClass: 'btn btn-success',
						cancelButtonClass: 'btn btn-danger',
						confirmButtonText: 'Yes, delete it!',
						buttonsStyling: false
					}).then(function(){
						$http
						.post("/student.delete.retake",{_csrf:$scope.anti_csrf,student_id :id_student,course_id:'#{course_id}'})
						.then(function(response){
							swal({
								type: 'success',
								html: name_student.toUpperCase()+' has been successfully deleted',
								confirmButtonClass: 'btn btn-success',
								buttonsStyling: false
							});

							$scope.loadstudents();
						})
						.catch(function(erreur){
							Notifier.danger(erreur.data)
						});
					});				
			}
			
			//Initial values			
			$scope.teacher_name ="#{teacher_name}";
			$scope.course_name ="#{course_name}";
			$scope.course_id ="#{course_id}";
			$scope.c_type ="";
			$scope.term_name ="#{term_name}";
			$scope.actual_term ="#{actual_term}";
			$scope.students=[];
			$scope.pdfs=[]; // PDFS will be loaded from back end server 
			$scope.loadstudents();
		})
