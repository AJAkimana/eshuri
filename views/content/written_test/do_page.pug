extends ../../layout
block append css_code
	link(rel="stylesheet", type="text/css", href="../css/font-awesome470/css/font-awesome.min.css")
block content 
	.main-panel
		include ../../partials/header 
		.wrapper.wrapper-full-page.full-page-background(ng-controller="doExamWrittenCtrl",style="background-image: url('../imgs/maranyu2.jpg')")
			.full-page.login-page
				.content
					.container-fluid
						.row
							.col-md-10.center
								.card
									.card-header
										a.btn-simple.btn.label.btn-rose(href="/courses/"+course_id) Go back and abort test
										h4.card-title.text-center {{Q.length || 0}} Questions up to<strong> {{getTotal()}} Pts</strong>
										h2.text-danger.text-center(ng-show='alreadyDone') You have already submitted your answers
										h6 Subject: {{title|uppercase}}
										h6 Deadline: <strong>{{deadline|fromNow}}</strong> <small>{{deadline}}</small>
									.card-content
										.panel-group(role='tablist')#accordion
											h5.card-title.text-center(ng-show="!Q.length") <i>No questions yet </i>
											.panel.panel-default(ng-repeat="quest in Q")
												.panel-heading(role='tab', id="{{'tab_'+$index}}", ng-click="setCurrentQuest($index)")
													a(role='button', data-toggle='collapse', data-parent='#accordion', href="#{{'collapse_'+$index}}", aria-expanded="false", aria-controls="{{'collapse_'+$index}}")
														h4.panel-title
															| {{$index+1}}. {{quest.t|uppercase}}  ({{quest.m}} pts)
															i.material-icons keyboard_arrow_down
												.panel-collapse.collapse(role='tabpanel', aria-labelledby="{{'tab_'+$index}}", id="{{'collapse_'+$index}}")
													.panel-body
														a.btn-simple.btn.label.btn-rose(ng-click="quest.size=quest.size+3") add rows ++
														.form-group
															textarea.form-control(rows="{{quest.size}}",ng-model="quest.reponse",placeholder="Enter your response here for question {{$index+1}}")
											.col-md-12
												button.btn.btn-fill.btn-success.pull-right(ng-click="submitAnswers()") Submit
block append scripts
	script(src="../js/MIT/MIT_sweetalert2.js", type="text/javascript")
	script(src="../js/MIT/MIT_moment.min.js", type="text/javascript")
	script.
		var app =angular.module('eshuri_App', ['ngRoute']);
		app
		.filter('fromNow', ['$interval',function($interval) {
			// trigger digest every 60 seconds
			$interval(function (){}, 60000);
			function fromNowFilter(time){
				return moment(time).fromNow();
			}
			fromNowFilter.$stateful=true;
			return fromNowFilter;
		}])
		.controller('doExamWrittenCtrl', function($scope, $http,$window){
			$scope.setCurrentQuest= function(quest_num){
				$scope.currentQuest= quest_num;
			}
			$scope.getTotal = function(){
				var total = 0;
				for(var i = 0; i < $scope.Q.length; i++){
					total += $scope.Q[i].m;
				}
				return total;
			}
			$scope.submitAnswers = function(){
				swal({
					title: 'Are you sure you want to submit answers  ?',
					text: "You submit only once!",
					type: 'warning',
					showCancelButton: true,
					confirmButtonClass: 'btn btn-success',
					cancelButtonClass: 'btn btn-danger',
					confirmButtonText: 'Yes, i am sure!',
					buttonsStyling: false
				}).then(function(){
					$scope.submitChoices();
				});
					
			}
			$scope.submitChoices =function(){
				//alert("-->"+JSON.stringify($scope.Q))
				var reponses=[];
				for(var i=0; i<$scope.Q.length;i++){
					if($scope.Q[i].reponse==null)$scope.Q[i].reponse="";
					reponses.push($scope.Q[i].reponse);
				}
				$http
				.post("/content.questions.do.written/#{content_id}",{_csrf:$scope.anti_csrf,studentAnswers:reponses})
				.then(function(response){
					Notifier.success("Your answers have been successfully submitted");
					setTimeout(function(){$window.history.back()},2000);
					$scope.isSubmitted=true;
				})
				.catch(function(erreur){
					Notifier.danger(erreur.data);
				});
			}
			$scope.loadInfo = function(){
				$http
				.get("/content.questions.do.written/#{content_id}")
				.then(function(response){
					$scope.Q =response.data.Q;
					console.log("=>"+JSON.stringify($scope.Q[0].c))
					$scope.title =response.data.title;
					$scope.deadline =moment(response.data.deadline).format('MM/D/YYYY h:mm a');
				})
				.catch(function(erreur){
					Notifier.danger(erreur.data);
				}); 
			}	
			$scope.setChoiceAsAnswer = function(index){
				$scope.Q[$scope.currentQuest].c[index].b=!$scope.Q[$scope.currentQuest].c[index].b;
			}	
			$scope.alertMessage = ()=>{
				if($scope.isSubmitted)	return;
				alarm.play();
				$scope.warnings++;
				if($scope.isWarned){
					$scope.submitChoices();
					return;
				} 
				swal({
					title: 'Don\'t leave the page beacause \n the test will be automatically submitted in '+($scope.timeCheat-$scope.warnings+" seconds"),
					text: 'You will not have any other chance',
					type: 'warning',
					timer: $scope.timeCheat*1000,
					showConfirmButton: false
				})
				$scope.isWarned=true;
				$scope.counting();
			}
			
			$scope.counting = ()=>{
				$scope.warnings++;
				
				if($scope.warnings >$scope.timeCheat) alert(" Now submit !!");
				if($scope.inPage== true)
					setTimeout(function(){$scope.counting()},1000);
			}
			$scope.Q=[];
			$scope.anti_csrf ="#{csrf_token}";
			$scope.alreadyDone ="#{alreadyDone}"
			$scope.loadInfo();

			$scope.warnings=0;
			$scope.isWarned=false;
			$scope.timeCheat =6;
			$scope.isSubmitted=false;
			var alarm =new Audio("../sounds/alert.wav");
			window.onblur = function(){
				if($scope.alreadyDone) return;
				$scope.alertMessage();
				$scope.inPage =false;
			}
			window.onfocus = function(){
				$scope.warnings =0;
				$scope.inPage =true;
			}
		})